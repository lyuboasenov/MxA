<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="MxA.Views.TimerPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:MxA.Converters"
    xmlns:extensions="clr-namespace:MxA.Extensions"
    xmlns:icons="clr-namespace:MxA.Icons.Material"
    xmlns:vm="clr-namespace:MxA.ViewModels"
    Title="{Binding TrainingName}"
    BackgroundColor="{DynamicResource PageBackgroundColor}"
    Visual="Material">

    <ContentPage.BindingContext>
        <vm:TimerViewModel />
    </ContentPage.BindingContext>

    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding ExitCommand}" />
    </Shell.BackButtonBehavior>

    <ContentPage.Resources>
        <ResourceDictionary>
            <x:Boolean x:Key="true">True</x:Boolean>
            <converters:SecondsToStringConverter x:Key="secondsConverter" />
            <converters:SecondsToFontSizeConverter x:Key="secondsToFontSizeConverter" />
            <converters:BatterLevelToGlyphConverter x:Key="batterLevelToImageConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout>
        <!--  sets/of | reps/of  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label
                Grid.Column="0"
                FontSize="Large"
                HorizontalOptions="Center">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Reps: " />
                        <Span
                            FontAttributes="Bold"
                            FontSize="30"
                            Text="{Binding Rep}" />
                        <Span Text=" / " />
                        <Span
                            FontAttributes="Bold"
                            FontSize="30"
                            Text="{Binding TotalReps}" />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <Label
                Grid.Column="1"
                FontSize="Large"
                HorizontalOptions="Center">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Sets: " />
                        <Span
                            FontAttributes="Bold"
                            FontSize="30"
                            Text="{Binding Set}" />
                        <Span Text=" / " />
                        <Span
                            FontAttributes="Bold"
                            FontSize="30"
                            Text="{Binding TotalSets}" />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
        </Grid>

        <!--  Counter  -->
        <Grid VerticalOptions="CenterAndExpand">
            <Label
                FontSize="{Binding Counter, Converter={x:StaticResource secondsToFontSizeConverter}, ConverterParameter={StaticResource true}}"
                HorizontalOptions="Center"
                Text="{Binding Counter, Converter={x:StaticResource secondsConverter}, ConverterParameter={StaticResource true}}"
                TextColor="{Binding Color}"
                VerticalOptions="Center" />
        </Grid>

        <!--  load cell value  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>



            <Label
                Grid.Column="0"
                FontSize="50"
                HorizontalOptions="Center"
                IsVisible="{Binding BleConnected}"
                Text="{Binding Load}" />


            <Image
                Grid.Column="1"
                HeightRequest="30"
                IsVisible="{Binding BleConnected}"
                VerticalOptions="CenterAndExpand"
                WidthRequest="30">
                <Image.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Binding BatteryLevel, Converter={StaticResource batterLevelToImageConverter}}"
                        Color="{DynamicResource Primary}" />
                </Image.Source>
            </Image>

            <ImageButton
                Grid.Column="2"
                Command="{Binding ConnectHangboardCommand}"
                VerticalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Binding ConnectHangboardGlyph}"
                        Color="{DynamicResource Primary}" />
                </ImageButton.Source>
            </ImageButton>
        </Grid>

        <BoxView
            Margin="5"
            HeightRequest="1"
            Color="{DynamicResource Primary}" />

        <!--  next  -->
        <Grid Padding="10" HeightRequest="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label
                Margin="5"
                FontSize="20"
                Text="Up Next:" />

            <Label
                Grid.Column="1"
                FontAttributes="Bold"
                FontSize="30"
                Text="{Binding NextPeriod}"
                TextColor="{Binding NextColor}" />

            <Label
                Grid.Column="2"
                FontSize="30"
                HorizontalOptions="EndAndExpand"
                Text="{Binding NextPeriodTime, Converter={x:StaticResource secondsConverter}, ConverterParameter={StaticResource true}}"
                TextColor="{Binding NextColor}" />
        </Grid>

        <BoxView
            Margin="5"
            HeightRequest="1"
            Color="{DynamicResource Primary}" />

        <StackLayout Margin="10" Orientation="Horizontal">
            <ImageButton Command="{Binding PrevSetCommand}" VerticalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Static icons:IconFont.Skip_previous}"
                        Color="{DynamicResource Primary}" />
                </ImageButton.Source>
            </ImageButton>
            <ImageButton Command="{Binding PrevRepCommand}" VerticalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Static icons:IconFont.Navigate_before}"
                        Color="{DynamicResource Primary}" />
                </ImageButton.Source>
            </ImageButton>

            <ImageButton
                Grid.Column="0"
                BackgroundColor="{DynamicResource Triadic2}"
                Command="{Binding PlayPauseCommand}"
                CornerRadius="40"
                HeightRequest="80"
                HorizontalOptions="CenterAndExpand"
                WidthRequest="80">
                <ImageButton.Source>
                    <FontImageSource FontFamily="MD" Glyph="{Binding PlayPauseGlyph}" />
                </ImageButton.Source>
            </ImageButton>

            <ImageButton Command="{Binding NextRepCommand}" VerticalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Static icons:IconFont.Navigate_next}"
                        Color="{DynamicResource Primary}" />
                </ImageButton.Source>
            </ImageButton>
            <ImageButton Command="{Binding NextSetCommand}" VerticalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Static icons:IconFont.Skip_next}"
                        Color="{DynamicResource Primary}" />
                </ImageButton.Source>
            </ImageButton>
        </StackLayout>

    </StackLayout>

</ContentPage>
