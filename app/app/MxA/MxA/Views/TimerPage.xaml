<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MxA.Views.TimerPage"
             xmlns:vm="clr-namespace:MxA.ViewModels"
             xmlns:extensions="clr-namespace:MxA.Extensions"
             xmlns:converters="clr-namespace:MxA.Converters"
             xmlns:icons="clr-namespace:MxA.Icons.Material"
             Title="{Binding TrainingName}"
             Visual="Material">

    <ContentPage.BindingContext>
        <vm:TimerViewModel />
    </ContentPage.BindingContext>

    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding ExitCommand}" />
    </Shell.BackButtonBehavior>

    <ContentPage.Resources>
        <ResourceDictionary>
            <x:Boolean x:Key="true">True</x:Boolean>
            <converters:SecondsToStringConverter x:Key="secondsConverter" />
            <converters:SecondsToFontSizeConverter x:Key="secondsToFontSizeConverter" />
            <converters:BatterLevelToGlyphConverter x:Key="batterLevelToImageConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout>
        <!-- sets/of | reps/of -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" HorizontalOptions="Center" FontSize="Large">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Reps: " />
                        <Span Text="{Binding Rep}" FontAttributes="Bold" FontSize="30" />
                        <Span Text=" / " />
                        <Span Text="{Binding TotalReps}" FontAttributes="Bold" FontSize="30" />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <Label Grid.Column="1"  HorizontalOptions="Center" FontSize="Large">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Sets: " />
                        <Span Text="{Binding Set}" FontAttributes="Bold" FontSize="30" />
                        <Span Text=" / " />
                        <Span Text="{Binding TotalSets}" FontAttributes="Bold" FontSize="30" />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
        </Grid>

        <!-- Counter -->
        <Grid VerticalOptions="CenterAndExpand">
            <Label Text="{Binding Counter, Converter={x:StaticResource secondsConverter}, ConverterParameter={StaticResource true}}"
                   FontSize="{Binding Counter, Converter={x:StaticResource secondsToFontSizeConverter}, ConverterParameter={StaticResource true}}"
                   HorizontalOptions="Center"
                   VerticalOptions="Center"
                   TextColor="{Binding Color} "/>
        </Grid>

        <!-- load cell value -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>



            <Label Grid.Column="0"
                   Text="{Binding Load}"
                   HorizontalOptions="Center"
                   FontSize="50"
                    IsVisible="{Binding BleConnected}"
                   />


            <Image Grid.Column="1"
                    IsVisible="{Binding BleConnected}"
                    WidthRequest="30"
                    HeightRequest="30"
                    VerticalOptions="CenterAndExpand">
                <Image.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Color="{DynamicResource Primary}"
                        Glyph="{Binding BatteryLevel, Converter={StaticResource batterLevelToImageConverter}}" />
                </Image.Source>
            </Image>

            <ImageButton Grid.Column="2"
                        Command="{Binding ConnectHangboardCommand}"
                            VerticalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Color="{DynamicResource Primary}"
                        Glyph="{Binding ConnectHangboardGlyph}" />
                </ImageButton.Source>
            </ImageButton>
        </Grid>

        <BoxView HeightRequest="1" Color="{DynamicResource Triadic}" Margin="5"/>

        <!-- next -->
        <Grid Padding="10"
              HeightRequest="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Text="Up Next:"
                    FontSize="20"
                    Margin="5"/>
            <Label Grid.Column="1"
                   Text="{Binding NextPeriod}"
                   FontSize="30"
                   FontAttributes="Bold"
                   TextColor="{Binding NextColor}" />
            <Label Grid.Column="2"
                   Text="{Binding NextPeriodTime, Converter={x:StaticResource secondsConverter}, ConverterParameter={StaticResource true}}"
                   HorizontalOptions="EndAndExpand"
                   FontSize="30"
                   TextColor="{Binding NextColor}" />
        </Grid>

        <BoxView HeightRequest="1" Color="{DynamicResource Complementary}" Margin="5"/>

        <StackLayout Margin="10" Orientation="Horizontal">
            <ImageButton VerticalOptions="CenterAndExpand"
                         Command="{Binding PrevSetCommand}">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Color="{DynamicResource Primary}"
                        Glyph="{Static icons:IconFont.Skip_previous}" />
                </ImageButton.Source>
            </ImageButton>
            <ImageButton VerticalOptions="CenterAndExpand"
                         Command="{Binding PrevRepCommand}">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Color="{DynamicResource Primary}"
                        Glyph="{Static icons:IconFont.Navigate_before}" />
                </ImageButton.Source>
            </ImageButton>

            <ImageButton Grid.Column="0"
                         Command="{Binding PlayPauseCommand}"
                         WidthRequest="80"
                         HeightRequest="80"
                         CornerRadius="40"
                         BackgroundColor="{DynamicResource Triadic2}"
                         HorizontalOptions="CenterAndExpand">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{Binding PlayPauseGlyph}" />
                </ImageButton.Source>
            </ImageButton>

            <ImageButton VerticalOptions="CenterAndExpand"
                         Command="{Binding NextRepCommand}">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Color="{DynamicResource Primary}"
                        Glyph="{Static icons:IconFont.Navigate_next}" />
                </ImageButton.Source>
            </ImageButton>
            <ImageButton VerticalOptions="CenterAndExpand"
                         Command="{Binding NextSetCommand}">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Color="{DynamicResource Primary}"
                        Glyph="{Static icons:IconFont.Skip_next}" />
                </ImageButton.Source>
            </ImageButton>
        </StackLayout>

    </StackLayout>

</ContentPage>
