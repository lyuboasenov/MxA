<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="PortableLoadCell.Views.TimerPage"
             xmlns:vm="clr-namespace:PortableLoadCell.ViewModels"
             xmlns:extensions="clr-namespace:PortableLoadCell.Extensions"
             xmlns:converters="clr-namespace:PortableLoadCell.Converters"
             Title="{Binding TrainingName}"
             Visual="Material">

    <ContentPage.BindingContext>
        <vm:TimerViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <x:Boolean x:Key="true">True</x:Boolean>
            <converters:SecondsToStringConverter x:Key="secondsConverter" />
            <converters:SecondsToFontSizeConverter x:Key="secondsToFontSizeConverter" />
            <Color x:Key="ColorAccent">#96d1ff</Color>
            <Color x:Key="ColorAccentTransparent">#e496d1ff</Color>
            <Color x:Key="ColorBackgroundDisabled">#a396d1ff</Color>
            <Thickness x:Key="ImageButtonMargin" Left="10" Right="10" />
            <Style TargetType="ImageButton">
                <Setter Property="CornerRadius" Value="35"></Setter>
                <Setter Property="WidthRequest" Value="70"></Setter>
                <Setter Property="HeightRequest" Value="70"></Setter>
                <Setter Property="Padding" Value="10"></Setter>
                <Setter Property="BackgroundColor" Value="{StaticResource ColorAccent}"></Setter>
                <Setter Property="Margin" Value="{StaticResource ImageButtonMargin}"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource ColorAccent}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource ColorAccentTransparent}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Focused">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource ColorAccentTransparent}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource ColorBackgroundDisabled}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style TargetType="ProgressBar">
                <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
                <Setter Property="HeightRequest" Value="20"/>
                <Setter Property="ProgressColor" Value="#96d1ff"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid BackgroundColor="{Binding Color}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- sets/of | reps/of -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" HorizontalOptions="Center" FontSize="Large">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Reps: " />
                        <Span Text="{Binding Rep}" />
                        <Span Text=" / " />
                        <Span Text="{Binding TotalReps}" />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <Label Grid.Column="1"  HorizontalOptions="Center" FontSize="Large">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Sets: " />
                        <Span Text="{Binding Set}" />
                        <Span Text=" / " />
                        <Span Text="{Binding TotalSets}" />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
        </Grid>

        <!-- Counter -->
        <Grid Grid.Row="1">
            <Label Text="{Binding Counter, Converter={x:StaticResource secondsConverter}}"
                   FontSize="{Binding Counter, Converter={x:StaticResource secondsToFontSizeConverter}}"
                   HorizontalOptions="Center"
                   VerticalOptions="Center" />
        </Grid>

        <!-- play | load cell value -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>


            <ImageButton Grid.Column="0"
                      Command="{Binding PlayPauseCommand}"
                      Source="{Binding PlayPauseImageSource}" />
            <Label Grid.Column="1" Text="{Binding Load}" HorizontalOptions="Center" FontSize="50"/>
            <ImageButton Grid.Column="2"
                      Command="{Binding ConnectHangboardCommand}"
                      Source="{Binding ConnectHangboardImageSource}" />
        </Grid>

        <!-- rep progress -->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ImageButton Grid.Column="0"
                      Command="{Binding PrevRepCommand}"
                      Source="{extensions:ImageResource PortableLoadCell.Resources.icons.navigate_before_FILL0_wght400_GRAD0_opsz48.png}" />
            <StackLayout Grid.Column="1">
                <ProgressBar Progress="{Binding RepsProgress}" />
            </StackLayout>
            <ImageButton Grid.Column="2"
                      Command="{Binding NextRepCommand}"
                      Source="{extensions:ImageResource PortableLoadCell.Resources.icons.navigate_next_FILL0_wght400_GRAD0_opsz48.png}" />
        </Grid>

        <!-- set progress -->
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ImageButton Grid.Column="0"
                      Command="{Binding PrevSetCommand}"
                      Source="{extensions:ImageResource PortableLoadCell.Resources.icons.skip_previous_FILL0_wght400_GRAD0_opsz48.png}" />
            <StackLayout Grid.Column="1">
                <ProgressBar Progress="{Binding OveralProgress}" />
            </StackLayout>
            <ImageButton Grid.Column="2"
                 Command="{Binding NextSetCommand}"
                 Source="{extensions:ImageResource PortableLoadCell.Resources.icons.skip_next_FILL0_wght400_GRAD0_opsz48.png}" />
        </Grid>

        <!-- next -->
        <Grid Grid.Row="5"
              Padding="10"
              HeightRequest="50"
              BackgroundColor="{Binding NextColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Text="Up Next:"
                    FontSize="20"
                    Margin="5"/>
            <Label Grid.Column="1"
                Text="{Binding NextPeriod}"
                FontSize="30"
                FontAttributes="Bold"/>
            <Label Grid.Column="2"
                   Text="{Binding NextPeriodTime, Converter={x:StaticResource secondsConverter}, ConverterParameter={StaticResource true}}"
                   HorizontalOptions="EndAndExpand"
                   FontSize="30"
                   />
        </Grid>

    </Grid>

</ContentPage>
